{"version":3,"sources":["Clock.js","TextDate.js","Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","prop","ZeroPadding","val","slice","hrs","date","getHours","min","getMinutes","className","id","TextDate","mon","getMonth","day","getDay","Calendar","now","thisyear","getFullYear","thismonth","today","getDate","weeks","firstdaythismonth","Date","lastdaythismonth","index","j","days","k","push","App","React","useState","setNow","useEffect","intervalId","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAiBeA,MAjBf,SAAeC,GAEX,IAAMC,EAAc,SAACC,GACjB,OAAQ,KAAOA,GAAKC,OAAO,IAGzBC,EAAMH,EAAYD,EAAKK,KAAKC,YAC5BC,EAAMN,EAAYD,EAAKK,KAAKG,cAElC,OACI,sBAAKC,UAAU,OAAOC,GAAG,SAAzB,UACI,8BAAMN,IACN,8BAAMG,QCKHI,MAjBf,SAAkBX,GAEd,IAAMC,EAAc,SAACC,GACjB,OAAQ,KAAOA,GAAKC,OAAO,IAGzBS,EAAMX,EAAYD,EAAKK,KAAKQ,WAAa,GACzCC,EAAMb,EAAYD,EAAKK,KAAKU,UAElC,OACI,sBAAKN,UAAU,OAAOC,GAAG,YAAzB,UACI,8BAAME,IACN,8BAAME,QCqCHE,MAjDf,SAAkBhB,GASd,IAPA,IAAIiB,EAAMjB,EAAKK,KACXa,EAAWD,EAAIE,cACfC,EAAYH,EAAIJ,WAChBQ,EAAQJ,EAAIK,UAEZC,EAAQ,CAAC,GAAI,IAEjB,MAAgBA,EAAhB,eAAuB,CAKnB,IALC,IAAIrB,EAAG,KACJsB,EAAoB,IAAIC,KAAKP,EAAUE,EAAW,GAClDM,EAAmB,IAAID,KAAKP,EAAUE,EAAY,EAAG,GACrDO,EAAQ,EAAIH,EAAkBT,SAEzBa,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGxB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAKE,KACD,qBAAKtB,UAAU,OAAOC,GAAKiB,GAASN,EAAS,SAAW,GAAxD,SACMM,EAAQ,GAAKA,GAASD,EAAiBJ,UAAaK,EAAQ,MAGtEA,IAGJzB,EAAI6B,KACA,qBAAKtB,UAAU,QAAf,SAAwBoB,KAGhCT,IAGJ,OACI,sBAAKX,UAAU,OAAOC,GAAG,YAAzB,UACI,qBAAKD,UAAU,OAAOC,GAAG,aAAzB,SACI,qBAAKD,UAAU,gBAAf,SACKc,EAAM,OAGf,qBAAKd,UAAU,OAAOC,GAAG,aAAzB,SACI,qBAAKD,UAAU,gBAAf,SACKc,EAAM,WCjBZS,MAnBf,WAEI,MAAsBC,IAAMC,SAAS,IAAIT,MAAzC,mBAAOR,EAAP,KAAYkB,EAAZ,KAQA,OAPAF,IAAMG,WAAU,WACZ,IAAMC,EAAaC,aAAY,WAC3BH,EAAO,IAAIV,QACZ,KACH,OAAO,WAAcc,cAAcF,MACpC,CAACpB,IAGA,sBAAKR,UAAU,MAAf,UACI,cAAC,EAAD,CAAOJ,KAAMY,IACb,cAAC,EAAD,CAAUZ,KAAMY,IAChB,cAAC,EAAD,CAAUZ,KAAMY,QCRbuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8d9330bb.chunk.js","sourcesContent":["function Clock(prop) {\r\n\r\n    const ZeroPadding = (val) => {\r\n        return (\"00\" + val).slice(-2);\r\n    };\r\n\r\n    const hrs = ZeroPadding(prop.date.getHours());\r\n    const min = ZeroPadding(prop.date.getMinutes());\r\n\r\n    return (\r\n        <div className=\"_row\" id=\"_clock\">\r\n            <div>{hrs}</div>\r\n            <div>{min}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;","function TextDate(prop) {\r\n\r\n    const ZeroPadding = (val) => {\r\n        return (\"00\" + val).slice(-2);\r\n    };\r\n\r\n    const mon = ZeroPadding(prop.date.getMonth() + 1);\r\n    const day = ZeroPadding(prop.date.getDay());\r\n\r\n    return (\r\n        <div className=\"_row\" id=\"_textdate\">\r\n            <div>{mon}</div>\r\n            <div>{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextDate;","function Calendar(prop) {\r\n\r\n    let now = prop.date;\r\n    let thisyear = now.getFullYear();\r\n    let thismonth = now.getMonth();\r\n    let today = now.getDate();\r\n\r\n    let weeks = [[], []];\r\n\r\n    for (let val of weeks) {\r\n        let firstdaythismonth = new Date(thisyear, thismonth, 1);\r\n        let lastdaythismonth = new Date(thisyear, thismonth + 1, 0);\r\n        let index = 1 - firstdaythismonth.getDay();\r\n\r\n        for (let j = 0; j < 6; j++) {\r\n\r\n            let days = [];\r\n            for (let k = 0; k < 7; k++) {\r\n                days.push(\r\n                    <div className=\"_day\" id={(index == today) ? \"_today\" : \"\"}>\r\n                        {(index > 0 && index <= lastdaythismonth.getDate()) ? index : \"\"}\r\n                    </div>\r\n                );\r\n                index++;\r\n            }\r\n\r\n            val.push(\r\n                <div className=\"_week\">{days}</div>\r\n            );\r\n        }\r\n        thismonth++;\r\n    }\r\n\r\n    return (\r\n        <div className=\"_row\" id=\"_calendar\">\r\n            <div className=\"_col\" id=\"_thismonth\">\r\n                <div className=\"_calendarbody\">\r\n                    {weeks[0]}\r\n                </div>\r\n            </div>\r\n            <div className=\"_col\" id=\"_nextmonth\">\r\n                <div className=\"_calendarbody\">\r\n                    {weeks[1]}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import './App.css';\nimport React from 'react';\nimport Clock from './Clock.js';\nimport TextDate from './TextDate.js';\nimport Calendar from './Calendar.js';\n\nfunction App() {\n\n    const [now, setNow] = React.useState(new Date());\n    React.useEffect(function () {\n        const intervalId = setInterval(function () {\n            setNow(new Date());\n        }, 1000);\n        return function () { clearInterval(intervalId) };\n    }, [now]);\n\n    return (\n        <div className=\"App\">\n            <Clock date={now} />\n            <TextDate date={now} />\n            <Calendar date={now} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}